<html>
<head>
    <title>Two-Factor Authentication</title>
    <style>
        /*! tailwindcss v3.1.8 | MIT License | https://tailwindcss.com*/
        *, :after, :before {box-sizing: border-box;border: 0 solid #e5e7eb}

        :after, :before {--tw-content: ""}

        html {line-height: 1.5;-webkit-text-size-adjust: 100%;-moz-tab-size: 4;-o-tab-size: 4;tab-size: 4;font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji}

        body {margin: 0;line-height: inherit}

        hr {height: 0;color: inherit;border-top-width: 1px}

        abbr:where([title]) {-webkit-text-decoration: underline dotted;text-decoration: underline dotted}

        h1, h2, h3, h4, h5, h6 {font-size: inherit;font-weight: inherit}

        a {color: inherit;text-decoration: inherit}

        b, strong {font-weight: bolder}

        code, kbd, pre, samp {font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;font-size: 1em}

        small {font-size: 80%}

        sub, sup {font-size: 75%;line-height: 0;position: relative;vertical-align: initial}

        sub {bottom: -.25em}

        sup {top: -.5em}

        table {text-indent: 0;border-color: inherit;border-collapse: collapse}

        button, input, optgroup, select, textarea {font-family: inherit;font-size: 100%;font-weight: inherit;line-height: inherit;color: inherit;margin: 0;padding: 0}

        button, select {text-transform: none}

        [type=button], [type=reset], [type=submit], button {-webkit-appearance: button;background-color: initial;background-image: none}

        :-moz-focusring {outline: auto}

        :-moz-ui-invalid {box-shadow: none}

        progress {vertical-align: initial}

        ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {height: auto}

        [type=search] {-webkit-appearance: textfield;outline-offset: -2px}

        ::-webkit-search-decoration {-webkit-appearance: none}

        ::-webkit-file-upload-button {-webkit-appearance: button;font: inherit}

        summary {display: list-item}

        blockquote, dd, dl, figure, h1, h2, h3, h4, h5, h6, hr, p, pre {margin: 0}

        fieldset {margin: 0}

        fieldset, legend {padding: 0}

        menu, ol, ul {list-style: none;margin: 0;padding: 0}

        textarea {resize: vertical}

        input::-moz-placeholder, textarea::-moz-placeholder {opacity: 1;color: #9ca3af}

        input::placeholder, textarea::placeholder {opacity: 1;color: #9ca3af}

        [role=button], button {cursor: pointer}

        :disabled {cursor: default}

        audio, canvas, embed, iframe, img, object, svg, video {display: block;vertical-align: middle}

        img, video {max-width: 100%;height: auto}

        *, :after, :before {--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgba(59, 130, 246, .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }

        ::-webkit-backdrop {--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgba(59, 130, 246, .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }

        ::backdrop {--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgba(59, 130, 246, .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }

        .invisible {visibility: hidden}

        .absolute {position: absolute}

        .relative {position: relative}

        .top-\[55px\] {top: 55px}

        .left-1\/2 {left: 50%}

        .mx-auto {margin-left: auto;margin-right: auto}

        .my-4 {margin-top: 1rem;margin-bottom: 1rem}

        .my-6 {margin-top: 1.5rem;margin-bottom: 1.5rem}

        .my-2 {margin-top: .5rem;margin-bottom: .5rem}

        .my-3 {margin-top: .75rem;margin-bottom: .75rem}

        .mt-4 {margin-top: 1rem}

        .mb-4 {margin-bottom: 1rem}

        .mt-1\.5 {margin-top: .375rem}

        .mt-1 {margin-top: .25rem}

        .mt-2 {margin-top: .5rem}

        .mt-5 {margin-top: 1.25rem}

        .ml-4 {margin-left: 1rem}

        .block {display: block}

        .inline {display: inline}

        .flex {display: flex}

        .hidden {display: none}

        .h-\[154px\] {height: 154px}

        .w-\[40px\] {width: 40px}

        .w-\[154px\] {width: 154px}

        .w-1\/2 {width: 50%}

        .w-4\/12 {width: 33.333333%}

        .w-3\/12 {width: 25%}

        .w-2\/12 {width: 16.666667%}

        .w-6\/12 {width: 50%}

        .w-5\/12 {width: 41.666667%}

        .w-10\/12 {width: 83.333333%}

        .w-8\/12 {width: 66.666667%}

        .w-7\/12 {width: 58.333333%}

        .flex-grow {flex-grow: 1}

        .-translate-x-1\/2 {--tw-translate-x: -50%}

        .-translate-x-1\/2, .transform {transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}

        .flex-row {flex-direction: row}

        .flex-col {flex-direction: column}

        .items-center {align-items: center}

        .space-x-1\.5 > :not([hidden]) ~ :not([hidden]) {--tw-space-x-reverse: 0;margin-right: calc(.375rem * var(--tw-space-x-reverse));margin-left: calc(.375rem * (1 - var(--tw-space-x-reverse)))}

        .space-x-1 > :not([hidden]) ~ :not([hidden]) {--tw-space-x-reverse: 0;margin-right: calc(.25rem * var(--tw-space-x-reverse));margin-left: calc(.25rem * (1 - var(--tw-space-x-reverse)))}

        .rounded-md {border-radius: .375rem}

        .rounded-lg {border-radius: .5rem}

        .border {border-width: 1px}

        .border-gray-300 {--tw-border-opacity: 1;border-color: rgb(209 213 219/var(--tw-border-opacity))}

        .border-gray-400 {--tw-border-opacity: 1;border-color: rgb(156 163 175/var(--tw-border-opacity))}

        .border-blue-500 {--tw-border-opacity: 1;border-color: rgb(59 130 246/var(--tw-border-opacity))}

        .border-transparent {border-color: transparent}

        .border-red-500 {--tw-border-opacity: 1;border-color: rgb(239 68 68/var(--tw-border-opacity))}

        .bg-blue-500 {--tw-bg-opacity: 1;background-color: rgb(59 130 246/var(--tw-bg-opacity))}

        .bg-green-700 {--tw-bg-opacity: 1;background-color: rgb(21 128 61/var(--tw-bg-opacity))}

        .bg-green-700\/50 {background-color: rgba(21, 128, 61, .5)}

        .bg-green-600\/50 {background-color: rgba(22, 163, 74, .5)}

        .p-6 {padding: 1.5rem}

        .p-4 {padding: 1rem}

        .p-\[0\.21rem\] {padding: .21rem}

        .p-2 {padding: .5rem}

        .px-3 {padding-left: .75rem;padding-right: .75rem}

        .py-1\.5 {padding-top: .375rem;padding-bottom: .375rem}

        .py-1 {padding-top: .25rem;padding-bottom: .25rem}

        .py-4 {padding-top: 1rem;padding-bottom: 1rem}

        .text-center {text-align: center}

        .text-lg {font-size: 1.125rem;line-height: 1.75rem}

        .text-sm {font-size: .875rem;line-height: 1.25rem}

        .text-xl {font-size: 1.25rem;line-height: 1.75rem}

        .font-bold {font-weight: 700}

        .font-medium {font-weight: 500}

        .text-red-500 {--tw-text-opacity: 1;color: rgb(239 68 68/var(--tw-text-opacity))}

        .text-white {--tw-text-opacity: 1;color: rgb(255 255 255/var(--tw-text-opacity))}

        .text-blue-600 {--tw-text-opacity: 1;color: rgb(37 99 235/var(--tw-text-opacity))}

        .text-gray-500 {--tw-text-opacity: 1;color: rgb(107 114 128/var(--tw-text-opacity))}

        .ease-in-out {transition-timing-function: cubic-bezier(.4, 0, .2, 1)}

        .hover\:border-gray-300:hover {--tw-border-opacity: 1;border-color: rgb(209 213 219/var(--tw-border-opacity))}

        .hover\:bg-blue-800:hover {--tw-bg-opacity: 1;background-color: rgb(30 64 175/var(--tw-bg-opacity))}

        .hover\:text-red-500:hover {--tw-text-opacity: 1;color: rgb(239 68 68/var(--tw-text-opacity))}

        .hover\:text-gray-700:hover {--tw-text-opacity: 1;color: rgb(55 65 81/var(--tw-text-opacity))}

        @media (min-width: 640px) {
            .sm\:mt-0 {margin-top: 0}

            .sm\:ml-4 {margin-left: 1rem}

            .sm\:mb-0 {margin-bottom: 0}

            .sm\:flex-row {flex-direction: row}
        }

        {% if overrideColor %}
        .border-blue-500 {
            --tw-border-opacity: 1;
            border-color: {{ overrideColor }};
        }

        .text-blue-600 {
            --tw-text-opacity: 1;
            color: {{ overrideColor }};
        }

        .bg-blue-500 {
            --tw-bg-opacity: 1;
            background-color: {{ overrideColor }};
        }

        {% endif %}
        {% if overrideHoverColor %}
        .hover\:bg-blue-800:hover {
            --tw-bg-opacity: 1;
            background-color: {{ overrideHoverColor }};
        }

        .focus\:ring-blue-500:focus {
            --tw-ring-opacity: 1;
            --tw-ring-color: {{ overrideHoverColor }} !important;
        }

        .focus\:border-blue-500:focus {
            --tw-border-opacity: 1;
            border-color: {{ overrideHoverColor }} !important;
        }

        {% endif %}

        .invisible {
            visibility: hidden;
        }

        .animation-ctn {
            text-align: center;
        }

        @-webkit-keyframes checkmark {
            0% {
                stroke-dashoffset: 100px
            }

            100% {
                stroke-dashoffset: 200px
            }
        }

        @-ms-keyframes checkmark {
            0% {
                stroke-dashoffset: 100px
            }

            100% {
                stroke-dashoffset: 200px
            }
        }

        @keyframes checkmark {
            0% {
                stroke-dashoffset: 100px
            }

            100% {
                stroke-dashoffset: 0px
            }
        }

        @-webkit-keyframes checkmark-circle {
            0% {
                stroke-dashoffset: 480px

            }

            100% {
                stroke-dashoffset: 960px;

            }
        }

        @-ms-keyframes checkmark-circle {
            0% {
                stroke-dashoffset: 240px
            }

            100% {
                stroke-dashoffset: 480px
            }
        }

        @keyframes checkmark-circle {
            0% {
                stroke-dashoffset: 480px
            }

            100% {
                stroke-dashoffset: 960px
            }
        }

        @keyframes colored-circle {
            0% {
                opacity: 0
            }

            100% {
                opacity: 100
            }
        }

        /* other styles */
        /* .svg svg {
            display: none
        }
         */
        .inlinesvg .svg svg {
            display: inline
        }

        /* .svg img {
            display: none
        } */

        .icon--order-success svg polyline {
            -webkit-animation: checkmark 0.25s ease-in-out 0.7s backwards;
            animation: checkmark 0.25s ease-in-out 0.7s backwards
        }

        .icon--order-success svg circle {
            -webkit-animation: checkmark-circle 0.6s ease-in-out backwards;
            animation: checkmark-circle 0.6s ease-in-out backwards;
        }

        .icon--order-success svg circle#colored {
            -webkit-animation: colored-circle 0.6s ease-in-out 0.7s backwards;
            animation: colored-circle 0.6s ease-in-out 0.7s backwards;
        }
    </style>
</head>

<body>
<div id="secure_qr" class="p-4 flex flex-col sm:flex-row border border-gray-300 rounded-md">
    <div id="qr">
        <div class="border border-gray-300 rounded-lg p-[0.21rem]">
            <img class="block mx-auto" src="{{ qr }}">
        </div>
    </div>
    <div id="main-ui" class="flex-grow mt-4 sm:mt-0 sm:ml-4">
        <h1 class="mb-4 font-bold text-lg mt-1.5">{{ __('system_2fa.how_to') }}</h1>
        <ol>
            <li>1. {{ __('system_2fa.step_1') }}</li>
            <li>2. {{ __('system_2fa.step_2') }}</li>
            <li>3. {{ __('system_2fa.step_3') }}</li>
        </ol>

        <div class="mt-5 flex flex-col sm:flex-row space-x-1.5 items-center">
            <div class="mb-4 sm:mb-0">
                <input id="code1" type="text" maxlength="1" class="codefield rounded-md border border-gray-400 p-2 w-[40px] font-bold text-xl text-center"/>
                <input id="code2" type="text" maxlength="1" class="codefield rounded-md border border-gray-400 p-2 w-[40px] font-bold text-xl text-center"/>
                <input id="code3" type="text" maxlength="1" class="codefield rounded-md border border-gray-400 p-2 w-[40px] font-bold text-xl text-center"/>
                <input id="code4" type="text" maxlength="1" class="codefield rounded-md border border-gray-400 p-2 w-[40px] font-bold text-xl text-center"/>
                <input id="code5" type="text" maxlength="1" class="codefield rounded-md border border-gray-400 p-2 w-[40px] font-bold text-xl text-center"/>
                <input id="code6" type="text" maxlength="1" class="codefield rounded-md border border-gray-400 p-2 w-[40px] font-bold text-xl text-center"/>
            </div>
            <div id="secure_error" class="ml-4 text-red-500 font-medium hidden">{{ __('system_2fa.invalid_code') }}</div>
        </div>
        <div class="mt-4 flex flex-col sm:flex-row">
            <Button onclick="verify()" class="rounded-md bg-blue-500 hover:bg-blue-800 text-white px-3 py-1.5">{{ __('system_2fa.verify') }}</Button>
            <Button class="mt-4 sm:mt-0 sm:ml-4 hover:text-red-500" onclick="clearFields()">{{ __('system_2fa.clear') }}</Button>
        </div>
    </div>
    <div id="success-ui" class="mx-auto hidden flex flex-row">
        <div class="animation-ctn">
            <div class="icon icon--order-success svg w-[154px] mx-auto">
                <svg xmlns="http://www.w3.org/2000/svg" width="154px" height="154px">
                    <g fill="none" stroke="#22AE73" stroke-width="2">
                        <circle cx="77" cy="77" r="72" style="stroke-dasharray:480px, 480px; stroke-dashoffset: 960px;"></circle>
                        <circle id="colored" fill="#22AE73" cx="77" cy="77" r="72" style="stroke-dasharray:480px, 480px; stroke-dashoffset: 960px;"></circle>
                        <polyline class="st0" stroke="#fff" stroke-width="10" points="43.5,77.8 63.7,97.9 112.2,49.4 " style="stroke-dasharray:100px, 100px; stroke-dashoffset: 200px;"/>
                    </g>
                </svg>
            </div>

            <h2 class="mt-4">{{ __('system_2fa.activated_success') }}</h2>
        </div>

        <div>
            <div class="text-center mx-auto w-10/12 my-6">
                {{ __('system_2fa.rescue_codes') }}
            </div>
            <div id="codes" class="text-center mx-auto w-8/12 py-4 bg-green-600/50">
            </div>
        </div>
    </div>
</div>

<script>
    let codeStatus = [false, false, false, false, false, false];
    let deletePrevious = false;

    document.addEventListener('DOMContentLoaded', () =>
    {
        for (let i = 0; i < document.getElementsByClassName('codefield').length; i++) {
            document.getElementsByClassName('codefield')[i].addEventListener('keydown', (e) =>
            {
                let allowed = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];

                if (e.key === 'Backspace') {
                    deletePrevious = (document.getElementsByClassName('codefield')[i].value === '');
                    codeStatus[i] = false;
                    return true;
                }

                if (e.key === 'Enter' && i === 5) {
                    // Last Key, allow enter to be pressed
                    verify();
                    return;
                }

                if (!allowed.includes(e.key)) {
                    e.preventDefault();
                    return;
                }

                codeStatus[i] = true;
                return true;
            });
        }

        for (let i = 0; i < document.getElementsByClassName('codefield').length; i++) {
            let field = document.getElementsByClassName('codefield')[i];

            field.addEventListener('keyup', (e) =>
            {
                if (e.key === 'Backspace') {
                    if (!codeStatus[i]) {
                        if (document.getElementById('code' + (i)) && deletePrevious) {
                            document.getElementById('code' + (i)).value = '';
                            document.getElementById('code' + (i)).focus();
                            deletePrevious = false;
                        }
                    }
                } else {
                    if (codeStatus[i]) {
                        if (document.getElementById('code' + (i + 2))) {
                            document.getElementById('code' + (i + 2)).focus();
                        }
                    }
                }
            });
        }
    });

    async function verify()
    {
        // Assemble code
        let code = '';

        for (let i = 0; i < document.getElementsByClassName('codefield').length; i++) {
            code += document.getElementsByClassName('codefield')[i].value;
        }

        let json = await sendRequest(code);

        if (!json.valid) {
            document.getElementById('secure_error').classList.remove('hidden');
        } else {
            // set rescue codes
            let html = '';

            for (let i = 0; i < json.codes.length; i++) {
                html += json.codes[i];

                if (i + 1 < json.codes.length) {
                    html += '<br/>';
                }
            }

            document.getElementById('codes').innerHTML = html;
            document.getElementById('main-ui').classList.add('hidden');
            document.getElementById('qr').classList.add('hidden');
            document.getElementById('success-ui').classList.remove('hidden');
        }
    }

    async function sendRequest(code)
    {
        let options = {
            method: 'POST',
            mode: 'cors',
            cache: 'no-cache',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
                'Referer': '{{ host }}'
            },
            body: 'code=' + code + '&uid={{ uid }}'
        };

        let response = await fetch('/v1/tfa', options);
        let json = await response.json();

        return json;
    }

    function clearFields()
    {
        for (let i = 0; i < document.getElementsByClassName('codefield').length; i++) {
            document.getElementsByClassName('codefield')[i].value = '';
        }
    }
</script>
</body>
</html>