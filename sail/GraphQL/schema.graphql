type Query {
    version: String

    # Users
    user(id: ID!): User
    users(page: Int!, limit: Int!, search: String, sort: String, order: SortingOrder): UserListing

    # Authentication
    authenticate(email: String!, password: String!): String!
    verifyAuthenticationToken(token: String!): User
    verifyTFA(user_id: ID!, code: String!): Boolean!

    # Roles & ACL
    roles: [Role!]!
    role(id: ID!): RoleConfig
    #{CUSTOM_QUERIES}#
}

type Mutation {
    # Users
    createUser(name: UserNameInput!, email: String!, password: String!, avatar: String, meta: UserMetaInput!): Boolean!
    createAdminUser(name: UserNameInput!, email: String!, password: String!, roles: [String!]!, avatar: String, meta: UserMetaInput!): Boolean!
    updateUser(id: ID!, name: UserMetaInput, email: String, password: String, roles: [String!], avatar: String, meta: UserMetaInput): Boolean!
    deleteUser(id: ID!): Boolean!

    # Roles
    createRole(name: String!, description: String!, level: Int!, permissions: [String!]!): Boolean!
    updateRole(id: ID!, name: String, description: String, level: Int, permissions: [String!]): Boolean!
    deleteRole(id: ID!): Boolean!
    #{CUSTOM_MUTATIONS}#
}

enum SortingOrder {
    ASC
    DESC
}

type User {
    _id: ID!
    name: UserName!
    email: String!
    roles: [String!]
    status: Boolean!
    avatar: String!
    permissions: [String!]
    meta: UserMeta!
}

type UserListing {
    pagination: Pagination
    list: [User!]
}

type Pagination {
    current: Int!
    totalPages: Int!
    total: Int!
}

type UserName {
    first: String!
    last: String!
    full: String!
}

input UserNameInput {
    first: String!
    last: String!
}

type UserMeta {
    #{CUSTOM_META}#
}

input UserMetaInput {
    #{CUSTOM_META_INPUT}#
}

type Flags {
    #{CUSTOM_FLAGS}#
}

input FlagsInput {
    #{CUSTOM_FLAGS}#
}

type Role {
    _id: ID!
    name: String!
    description: String!
    slug: String!
    level: Int!
    permissions: [String!]!
}

type RoleConfig {
    role: Role!
    allowedPermissions: [ACL!]!
    permissions: [ACL!]!
}

type ACL {
    category: String!
    value: String!
}

#{CUSTOM_TYPES}#