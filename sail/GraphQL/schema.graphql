type Query {
    version: String

    # Users
    user(id: ID!): User
    userWithToken: User
    users(page: Int!, limit: Int!, search: String, sort: String, order: SortingOrder): UserListing

    # Authentication
    authenticate(email: String!, password: String!): LoginResult!
    verifyAuthenticationToken(token: String!): User
    verifyTFA(user_id: ID!, code: String!): Boolean!
    forgotPassword(email: String!): Boolean!

    # Roles & ACL
    roles: [Role!]!
    role(id: ID!): RoleConfig

    # Assets
    asset(id: ID!): Asset
    assets(page: Int!, limit: Int!, folder: String, search: String, sort: String, direction: SortingOrder): AssetListing

    # Emails
    email(id: ID!): Email
    emails: [Email!]!

    # Entries
    entryTypes: [EntryType!]!
    #{CUSTOM_QUERIES}#
}

type Mutation {
    # Users
    createUser(name: UserNameInput!, email: String!, password: String!, avatar: String, meta: UserMetaInput!): Boolean!
    createAdminUser(name: UserNameInput!, email: String!, password: String!, roles: [String!]!, avatar: String, meta: UserMetaInput!): Boolean!
    updateUser(id: ID!, name: UserMetaInput, email: String, password: String, roles: [String!], avatar: String, meta: UserMetaInput): Boolean!
    deleteUser(id: ID!): Boolean!
    validateAccount(code: String!): Boolean!
    changePassword(code: String!, password: String!): PasswordChangeResult!

    # Roles
    createRole(name: String!, description: String!, level: Int!, permissions: [String!]!): Boolean!
    updateRole(id: ID!, name: String, description: String, level: Int, permissions: [String!]): Boolean!
    deleteRole(id: ID!): Boolean!

    # Assets
    uploadAsset(src: String!, filename: String!): String!
    updateAssetTitle(id: ID!, locale: String!, title: String!): Boolean!
    deleteAsset(id: ID!): Boolean!
    transformAsset(id: ID!, name: String!, size: SizeInput!): String!

    # Emails
    createEmail(name: String!, subject: LocaleFieldInput!, title: LocaleFieldInput!, content: LocaleFieldInput!, cta: LocaleFieldInput!, cta_title: LocaleFieldInput!, template: String!): Boolean!
    updateEmail(id: ID!, name: String, subject: LocaleFieldInput, title: LocaleFieldInput, content: LocaleFieldInput, cta: LocaleFieldInput, cta_title: LocaleFieldInput, template: String): Boolean!
    deleteEmail(id: ID!): Boolean!
    deleteEmailBySlug(slug: String!): Boolean!
    #{CUSTOM_MUTATIONS}#
}

enum SortingOrder {
    ASC
    DESC
}

type LoginResult {
    user_id: String!,
    message: String!
}

type User {
    _id: ID!
    name: UserName!
    email: String!
    roles: [String!]
    status: Boolean!
    avatar: String!
    permissions: [String!]
    meta: UserMeta!
}

type EntryType {
    _id: ID!
    title: String!
    handle: String!
    urlPrefix: String!
}

type UserListing {
    pagination: Pagination!
    list: [User!]!
}

type Pagination {
    current: Int!
    totalPages: Int!
    total: Int!
}

type UserName {
    first: String!
    last: String!
    full: String!
}

input UserNameInput {
    first: String!
    last: String!
}

type UserMeta {
    #{CUSTOM_META}#
}

input UserMetaInput {
    #{CUSTOM_META_INPUT}#
}

type Flags {
    #{CUSTOM_FLAGS}#
}

input FlagsInput {
    #{CUSTOM_FLAGS}#
}

type Role {
    _id: ID!
    name: String!
    description: String!
    slug: String!
    level: Int!
    permissions: [String!]!
}

type RoleConfig {
    role: Role!
    allowedPermissions: [ACL!]!
    permissions: [ACL!]!
}

type ACL {
    category: String!
    value: String!
}

type Asset {
    filename: String!
    site_id: String!
    name: String!
    title: LocaleField!
    folder: String!
    url: String!
    filesize: Int!
    size: Size!
    is_image: Boolean!
    uploader: User
    created_at: Int!
    transforms: [Transform!]!
}

type AssetListing {
    pagination: Pagination!
    list: [Asset!]!
}

type LocaleField {
    #{LOCALE_FIELDS}#
}

input LocaleFieldInput {
    #{LOCALE_FIELDS}#
}

type Transform {
    transform: String!
    filename: String!
    name: String!
    url: String!
}

type Size {
    width: Int!
    height: Int!
}

input SizeInput {
    width: Int!
    height: Int!
    crop: String!
}

type Email {
    _id: ID!
    name: String!
    slug: String!
    subject: LocaleField!
    title: LocaleField!
    content: LocaleField!
    cta: LocaleField!
    cta_title: LocaleField!
    template: String!
    created_at: Int!
    last_modified: Int!
}

input EmailInput {
    name: String!
    subject: LocaleFieldInput!
    title: LocaleFieldInput!
    content: LocaleFieldInput!
    cta: LocaleFieldInput!
    cta_title: LocaleFieldInput!
    template: String!
}

type PasswordChangeResult {
    passwordCheck: Boolean!
    codeCheck: Boolean!
}

#{CUSTOM_TYPES}#